@startuml Packet

namespace Packet {
	abstract class AbstractPacket {
		+{static} pktMapping: Record<string, Class>;
		+{static} PKT_CONSTANT_NAME: string
		+serial: number
		+payload: any
		+{static} mapClass(name: string, value: Class): void
		+{static} getClass(name: string): Class
		+{static} isSensitive(clazz: Class): boolean
		+freeze(keys?: (keyof this)[]): this
	}

	namespace Client {
		abstract class ClientPacket extends .Packet.AbstractPacket {
			+validate(): boolean
			+extractHead(data: any): ClientPacket;
			+{abstract} extractPayload(): ClientPacket;
		}

		class PlayerChatPacket extends ClientPacket {
			#message: string
		}

		class PlayerLoginPacket extends ClientPacket {}
		class PlayerLogoutPacket extends ClientPacket {}
	}

	namespace Server {
		abstract class ServerPacket extends .Packet.AbstractPacket {}
	}
}

@enduml
